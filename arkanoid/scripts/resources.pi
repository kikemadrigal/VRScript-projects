namespace es_tipolisto_arkanoid;

class Resources implements App{
	constants:
		MUSIC_MENU=0;
		MUSIC_INGAME=1;
		AUDIO_HIT=0;
		AUDIO_PALA=1;
		AUDIO_GAME_OVER=2;
		AUDIO_GAME_START=3;
	properties:
		musics=[];
		music=null;
		audios=[];

	virtual _operator_new(_app){	
		LoadMusic("sounds/music_menu.ogg");
		LoadMusic("sounds/ingame.ogg");
		
		LoadAudio("sounds/hit.ogg");
		LoadAudio("sounds/pala.ogg");
		LoadAudio("sounds/gameover.ogg");
		LoadAudio("sounds/game_start.ogg");
	}
	
	virtual operator_delete(){
		for (i=0;i<sizeof(musics);i++) delete musics[i];
		for (j=0;j<sizeof(audios);j++) delete audios[j];
	}
	function GetMusicMenu(){
		return musics[MUSIC_MENU];
	}
	function GetMusicIngame(){
		return musics[MUSIC_INGAME];
	}
	function PlaySoundHit(){
		audios[AUDIO_HIT].Play();
	}
	
	function PlaySoundPala(){
		audios[AUDIO_PALA].Play();
	}
	
	function PlaySoundGameOver(){
		audios[AUDIO_GAME_OVER].Play();
	}
	function PlaySoundGameStart(){
		audios[AUDIO_GAME_START].Play();
	}
	function LoadMusic(path){
		//_music=NewObject("music", "Gl_Music");
		_music=app.NewMusic("music");
		_music.Load(path);
		_music.SetVolume(50);
		_music.SetLoop(True);
		musics+=[_music];
	}
	
	function LoadAudio(path){
		//click_sound=NewObject("click_sound", "GL_Sound");
		//click_sound.Load("audios/click.ogg");
		_audio=app.NewSound("audio");
		_audio.Load(path);
		_audio.SetVolume(255);
		audios+=[_audio];
	}

}