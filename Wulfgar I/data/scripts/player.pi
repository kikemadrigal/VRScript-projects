namespace es_tipolisto_WulfgarI;

class Player implements GL_sprite{
	properties:
		score=0;
		lives=50;
		speedX=4;
		incrementoX=0;
		incrementoY=0;
		aceleracion=0;
		//atacando
		attack=false;
		//Cogiendo algo
		pick=false;
		//corriendo
		walking=false;
		//Aganchado
		crouching=false;
		game=null;
		//Llaves a recoger (puede variar seg칰n pantalla
		keys_to_collect=3;

	virtual _operator_new(_name,_creator, _params){
		game=_params[0];
		Addanimationwithsheet("idle",GetApp().path+"images/player.png",0,0,0,0,64,64);
		Addanimationwithsheet("walk",GetApp().path+"images/player.png",0,5,0,64,64,64,-1,-1,-1,0.1);
		Addanimationwithsheet("attack",GetApp().path+"images/player.png",0,4,0,128,64,64,-1,-1,-1,0.3);
		Addanimationwithsheet("jump",GetApp().path+"images/player.png",0,0,0,3*64,64,64);
		Addanimationwithsheet("fall",GetApp().path+"images/player.png",0,0,0,4*64,64,64);
		Addanimationwithsheet("dead",GetApp().path+"images/player.png",0,0,0,5*64,64,64);
		Addanimationwithsheet("pick",GetApp().path+"images/player.png",0,5,0,6*64,64,64);
		Addanimationwithsheet("crouching",GetApp().path+"images/player.png",0,0,0,7*64,64,64);
		SetAnimation("idle");	
		SetPriority(1);
		SetColliderMode(True);
		SetcollisionRect(20,20,24,44);
	}
	virtual Move(){
		if(aceleracion>0){
			_tile_down=game.get_tile_down(GetX(), GetY());
			//GetApp().GetEngine().LogPrint("aceleracion: "+aceleracion);
			if(_tile_down<TILE_TYPE_GROUND){
				if(incrementoY>=0){	
					//lo situamos encima de la plataforma
					incrementoY=0;
					aceleracion=0;
				}
			}
		}
		if(crouching) SetcollisionRect(20,35,24,29);
		else SetcollisionRect(20,20,24,44);
		
	}


	virtual OnSpriteCollision (_sp1,_sp2)
	{
		/**
		 * Colis칩n player con los enemigos 游뽖
		 */
		//if(Class_Id(_sp2)=="Enemy"){
 		if( Class_Id(_sp2)=="BouncesLeftToRight" ||
			Class_Id(_sp2)=="Circle" ||
			Class_Id(_sp2)=="Vulture" ||
			Class_Id(_sp2)=="HorizontalPlatform" ||
			Class_Id(_sp2)=="ShootPlayerHorizontal" ||
			Class_Id(_sp2)=="ShootPlayerVertical" ||
			Class_Id(_sp2)=="CloudBalancing" ||
			Class_Id(_sp2)=="Hammer" ||
			Class_Id(_sp2)=="HorizontalPlatformBig" ||
			Class_Id(_sp2)=="ParachuteBomb" ||
			Class_Id(_sp2)=="SleepingBat" ){
			game.GetApp().StageGlobal.play_sound_hit();
			if(attack){
				_sp2.touches++;
				_fx=_sp2.CreateFX("TINT");
				_fx.Start(1000, RGB(255,0,0));
				if(_sp2.touches>_sp2.touches_for_died){
					//borramos el enemigo
					game.delete_enemy(_sp2);
				}
			}else player_die();
		}
		
		if(Class_Id(_sp2)=="Pendulum" ||
		   Class_Id(_sp2)=="Fire" || 
		   Class_Id(_sp2)=="Boss1"|| 
		   Class_Id(_sp2)=="Boss2"|| 
		   Class_Id(_sp2)=="Boss3"|| 
		   Class_Id(_sp2)=="Boss4" || 
		   Class_Id(_sp2)=="CrushingBrick"|| 
		   Class_Id(_sp2)=="Saw"){
		   		player_die();
		   }
		/**
		 * Colis칩n player con los objetos
		 */
	    if(Class_Id(_sp2)=="Object" ){
			//GetApp().GetEngine().LogPrint("colsionn con: "+_sp2.GetItemType());
			//Si es la meta
			if(_sp2.GetItemType()==OBJECT_TYPE_META){
				//game.ChangeStage();	
				game.change_stage();
			}
			//Si es u na llave
			else if(_sp2.GetItemType()==OBJECT_TYPE_COLLECTIBLE_KEY){
				
				score+=100;
				game.delete_object(_sp2);
				keys_to_collect--; 
				game.print_score(); 
				//Si ya no quedan llaves por recoger ponemos el objeto meta al final de la pantalla
				if(keys_to_collect<=0){
					//creamos la meta
					//Si es la pantalla vertical lo ponemos arriba
					if(game.currentStage==4) game.create_object(OBJECT_TYPE_META,700,5*32);
					else game.create_object(OBJECT_TYPE_META,LEVEL_WIDTH-60,GetApp().GetResY()-100);
				}
				game.GetApp().StageGlobal.play_sound_keys();
			//Si es unamoeda de 50 puntos
			}else if(_sp2.GetItemType()==OBJECT_TYPE_COLLECTIBLE_COIN50){
				score+=50;
				game.delete_object(_sp2);
				game.print_score();
				game.GetApp().StageGlobal.play_sound_caught();
			}else if(_sp2.GetItemType()==OBJECT_TYPE_COLLECTIBLE_COIN100){
				score+=100;
				game.delete_object(_sp2);  
				game.print_score();
				game.GetApp().StageGlobal.play_sound_caught();
			//Si es una plataforma horizontal
			}else if(_sp2.GetItemType()==OBJECT_TYPE_PLATFORM_HORIZONTAL){
				_x_player=GetX()-game.GetApp().GetResX()/2;
				_x_camera=Clamp(_x_player,0, LEVEL_WIDTH-game.GetApp().GetResX());
				game.SetCameraX(_x_camera);
				if(GetY()<_sp2.GetY() && incrementoY>=0){	
					SetY(_sp2.GetY()-GetHF()+1);
					incrementoY=0;
					aceleracion=0;
					incpos(_sp2.speedX,0);
				}
			//Si es una plataforma vertical
			}else if(_sp2.GetItemType()==OBJECT_TYPE_PLATFORM_VERTICAL){
				SetY(_sp2.GetY()-GetHF()+1);
				incrementoY=0;
				aceleracion=0;
				incpos(0,_sp2.speedY);
			}else if(_sp2.GetItemType()==OBJECT_TYPE_FIRE_DEATH || _sp2.GetItemType()==OBJECT_TYPE_LAVA){
				player_die();

			//Si es un bloque que se puede empujar o agarrar
			}else if(_sp2.GetItemType()==OBJECT_TYPE_SAND){
				//GetApp().GetEngine().LogPrint("colison con la paja");
				//Obtenemos los tiles que tiene a su alrededor para no moverlo si tiene s칩lidos junto a 칠l
				tile_right=game.get_tile_right_object(_sp2.GetX(),_sp2.GetY());
				tile_left=game.get_tile_left_object(_sp2.GetX(),_sp2.GetY());
				// Si est치 saltando el player sobre la paja paramos el salto
				if(aceleracion>0){
					incrementoY=0;
					aceleracion=0;
				}
				//No queremos que haga nada cuando haya una colisi칩n superior
				if(GetHF()+GetY()>=_sp2.GetY() && GetHF()+GetY()<_sp2.GetY()+10){
				//Si est치 agarrando un paquete
				}else if(pick){
					_sp2.SetX(GetX());
				}else{
					if(incrementoX>0){
						//GetApp().GetEngine().LogPrint("lo movemos a la dercha");
						//Movemos el bloque cuando no haya ning칰n s칩lido al lado
						if(tile_right>TILE_TYPE_GROUND || tile_right==TILE_TYPE_EMPTY) {
							if(pick){
								_sp2.SetX(_sp2.GetX()+(incrementoX*-1));
								//GetApp().GetEngine().LogPrint("agarrando");
							}
							else {
								//GetApp().GetEngine().LogPrint("empujando");
								_sp2.SetX(_sp2.GetX()+incrementoX);
							}
						}
					}else if(incrementoX<0){
						if(tile_left>TILE_TYPE_GROUND || tile_left==TILE_TYPE_EMPTY){
							if(pick){
								//GetApp().GetEngine().LogPrint("agarrando");
								_sp2.SetX(_sp2.GetX()+incrementoX*-1);
							}else{
								//GetApp().GetEngine().LogPrint("empujando");
								_sp2.SetX(_sp2.GetX()+incrementoX);
							}
						}
					}
					
				}					
			}	
		}
		
		/*
		//Otra forma ser칤a con setype y getType en el main
		if(_sp2.GetType()==GetApp().TYPE_SUELO){
			//GetApp().GetEngine().LogPrint("with suelo");
			if(GetY()<_sp2.GetY() && incrementoY>=0){	
				//lo situamos encima de la plataforma
				SetY(_sp2.GetY()-GetHF()+1);
				incrementoY=0;
				aceleracion=0;
			}
		}
		*/
	}

	function SetPosition(_x,_y){
        SetPos(_x,_y);
    }


	function player_die(){
		lives--;
		if(lives<0) {
			if(DEBUG_MODE){
				lives=10;		
			}else{
				SetAnimation("dead");	
				game.GetApp().stageGlobal.play_sound_game_over();
				game.print_text_game("GAME OVER");
				game.GetApp().Sleep(8000);				
				game.print_score("");
				game.print_text_game("");
				game.GetApp().changeMenuScreen();
			}
		}else{
			// Hacemos un sonido de golpe
			GetApp().stageGlobal.play_sound_hit();
			//Efecto de color rojo durante 2 segundos
			_fx=CreateFX("TINT");
			_fx.Start(2000, RGB(255,0,0));
			//Efecto de parpadeo
			_fx=CreateFX("BLINK");
			_fx.Start(100,15);
			//GetApp().stageGlobal.drawScore();
			game.print_score();
		}
	}

}