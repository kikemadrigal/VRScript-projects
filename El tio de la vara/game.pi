class Game implements GL_Stage{
    properties:
        bg=null;
        house=null;
        player1=null;
        enemies=[];
        currentStage=0;
        //Para ir creando enemigos usamos un timer
        timer=null;
        mapper=null;
        tmx=null;

    virtual _operator_new(_name,_creators){
        SetDebug(True);

        mapper =NewObject("mapper","gl_mapper");
		tmx = new TMX_Loader();
		
        player1=NewObject("player","Player",[this]);
        player1.SetVisible(True);
        player1.SetPos(20,100);

        ChangeStage();
    }
    function _operator_delete(){
        bg.Destroy();
        house.Destroy();
        player1.Destroy();
    }






    function AddActor(_name, _type, _x, _y, _params)
	{
		switch (_type)
		{
			case "suelo": 
                platform=NewObject(_name,"Platform",[this,10]);
                platform.SetPos(_x, _y);
            break;
            case "plataforma_horizontal": 
                platform=NewObject(_name,"Platform",[this,11]);
                platform.SetPos(_x, _y);
                platform.SetStartPosition(_x, _y);
            break;
            case "plataforma_vertical": 
                platform=NewObject(_name,"Platform",[this,12]);
                platform.SetPos(_x, _y);
                platform.SetStartPosition(_x, _y);
            break;  
		}
	}


    virtual Move(){     
        for (i=0; i< sizeof(enemies); i++){
            enemy=enemies[i];
            if(enemy.GetX()<player1.GetX()-380){
                enemies-=[enemy];
                enemy.Destroy();
            }
        } 
    }







    function ChangeStage(){
        currentStage++;
        //GetEngine().LogPrint("camniando a la escena "+currentStage);
        if(currentStage>4)currentStage=1;

        switch (currentStage){
            case 1:
                tmx.Load(mapper, "tilesmap.tmx", this);
                //Colocamos el fondo
                bg=NewObject("bg","gl_sprite");
                bg.Addframe("images/stage1.png");
                bg.SetPriority(-1);
                //Colocamos la meta
                meta=NewObject("meta","Platform",[this,0]); 
                meta.SetPos(GetApp().LEVEL_WIDTH-20,GetApp().GetResY()-200);
                //Vamos creando enemigos cada 2 segundos
                timer_create_enemies=NewObject("timer", "GL_Timer");
                timer_create_enemies.SetFrequency(2000);
                timer_create_enemies.SetUserCallBack(this,"OnTimerCreateEnemiesCallBack");
                break;
            case 2:
                tmx.Load(mapper, "tilesmap.tmx", this);
                //Colocamos el fondo
                bg=NewObject("bg","gl_sprite");
                bg.Addframe("images/stage2.png");
                bg.SetPriority(-1);
                meta=NewObject("house","Platform",[this,0]); 
                meta.SetPos(GetApp().LEVEL_WIDTH-20,GetApp().GetResY()-200);

                player1.SetPos(20,100);
                _x_camera=player1.GetX()-GetApp().GetResX()/2;
                SetCameraX(_x_camera);
                break;
            case 3:
                bg=NewObject("bg","gl_sprite");
                bg.Addframe("images/stage2.png");
                break;
            case 4:
                bg=NewObject("bg","gl_sprite");
                bg.Addframe("images/stage1.png");
                break; 
        }
	}


    function create_enemy(_type){
        //Los par√°metros son el game y el tipo de enemigo
        enemy=NewObject("enemy","Enemy",[this,_type]);
        enemy.SetPos(player1.GetX()+380,rand(300,800));
        enemies+=[enemy];
    }
    function delete_enemy(_enemy){
        enemies-=[_enemy];
        //_enemy.Destroy();
    }

    function OnTimerCreateEnemiesCallBack(_timer){
		create_enemy(rand(1,4));
	}
}

        