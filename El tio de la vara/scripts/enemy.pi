class Enemy implements GL_sprite{
	properties:
		game=null;
		type=0;
		speedX=0;
		speedY=0;
		start_position_x=0;
		start_position_y=0;
		pendulum=null;
	
	/**
	 * Ene el copnstructor le pasamos:
	 * game: la clase principal del juego
	 * _type: tipo de enemigo
	 * _x: posici칩n x inicial
	 * _y: posici칩n y inicial
	 */
    virtual _operator_new(_name,_creator, _params){
		game=_params[0];
		_type=_params[1];
		_x=_params[2];
		_y=_params[3];
		SetPos(_x,_y);
		SetStartPosition(_x, _y);
		_add_dead_animation=true;
	
		switch(_type){
			/**
			 * Los p치jaros del 1 al 4 游땘 son p치jaros que salen por la izquierda
			 * tienen una velocidad aleatoria y una atura aleatoria
			 */
			//Enemigo Aguila de izquierda a derecha
			case ENEMY_TYPE_EAGLE:
				Addanimationwithsheet("eagle","images/objects-enemies.png",0,5,0,8*32,32,32,-1,-1,-1,.2);
				Setanimation("eagle");
				type=ENEMY_TYPE_EAGLE; 
				break;
			//Enemigo Cuervo de izquierda a derecha
			case ENEMY_TYPE_RAVEN:
				Addanimationwithsheet("raven","images/objects-enemies.png",0,4,0,9*32,32,32,-1,-1,-1,.2);
				Setanimation("raven");
				type=ENEMY_TYPE_RAVEN; 
				break;
			//Enemigo 3
			case ENEMY_TYPE_EAGLE_WHITE:
				Addanimationwithsheet("eagle_white","images/objects-enemies.png",0,5,0,8*32,32,32,-1,-1,-1,.2);
				Setanimation("eagle_white");
				SetColor(RGB(255,255,255));
				type=3; 
				break;
			//Enemigo 4
			case ENEMY_TYPE_RAVEN_BLACK:
       			Addanimationwithsheet("raven","images/objects-enemies.png",0,4,0,9*32,32,32,-1,-1,-1,.2);
				Setanimation("raven");
        		//SetColor(RGB(0,0,0));
				//speedX=-20.5;
				type=4; 
				break;
			//Buitre que te persigue
			case ENEMY_TYPE_VULTURE:
       			Addanimationwithsheet("buitre","images/objects-enemies.png",0,1,0,10*32,32,32,-1,-1,-1,.2);
				Setanimation("buitre");
        		//SetColor(RGB(255,0,255));
				speedX=-2;
				type=ENEMY_TYPE_VULTURE; 
				break;
			// Escorpi칩n
			case ENEMY_TYPE_SQUIRREL:
	   			Addanimationwithsheet("escorpion","images/objects-enemies.png",0,5,0,11*32,32,32,-1,-1,-1,.2);
				Setanimation("escorpion");
				speedX=-3;
				type=ENEMY_TYPE_SQUIRREL; 
				break;
			
			case ENEMY_TYPE_BAT:
       			Addanimationwithsheet("bat","images/objects-enemies.png",0,4,10*32,8*32,32,32,-1,-1,-1,.2);
				Setanimation("bat");
        		SetCircle(_x,_y,50);
				type=4; 
				break;
			//monstruo que dispara derecha o izquierda
			case ENEMY_TYPE_SHOOT_PLAYER_HORIZONTAL:
       			Addanimationwithsheet("monstruo1","images/objects-enemies.png",0,3,0,14*32,32,32,-1,-1,-1,.2);
				Setanimation("monstruo1");
				type=ENEMY_TYPE_SHOOT_PLAYER_HORIZONTAL; 
				break;
			case ENEMY_TYPE_SHOOT_PLAYER_VERTICAL:
       			Addanimationwithsheet("monstruo1","images/objects-enemies.png",0,3,0,15*32,32,32,-1,-1,-1,.2);
				Setanimation("monstruo1");
				type=ENEMY_TYPE_SHOOT_PLAYER_VERTICAL; 
				break;
			// La sierra
			case ENEMY_TYPE_SAW:
	   			Addanimationwithsheet("saw","images/objects-enemies.png",0,2,0,19*32,32,32,-1,-1,-1,.2);
				Setanimation("saw");
				SetSquare(_x,_y,100,100);
				type=ENEMY_TYPE_SAW; 
				break;
			//p칠ndolo
			case ENEMY_TYPE_PENDULUM:
				//par치mteros x, y , lenght
				//_lenght_aleatory=rand(20,70);
				_add_dead_animation=false;
	   			pendulum=game.NewObject("pendulum","pendulum", [game,_x, _y, 50]);
				//Al p칠ndulo no se le puede matar
				
				type=ENEMY_TYPE_PENDULUM; 
				break;
			// Ladrillo que aplasta
			case ENEMY_TYPE_CRUSHING_BRICK:
	   			Addanimationwithsheet("crushing-brick","images/objects-enemies.png",0,0,3*32,1*32,32,32,-1,-1,-1,.2);
				Setanimation("crushing-brick");
				type=ENEMY_TYPE_CRUSHING_BRICK; 
				break;
			// Bomba andando
			case ENEMY_TYPE_BOMB:
	   			Addanimationwithsheet("bomb","images/objects-enemies.png",0,5,0,22*32,32,32,-1,-1,-1,.2);
				Setanimation("bomb");
				speedX=-3;
				type=ENEMY_TYPE_BOMB; 
				break;
			case ENEMY_TYPE_DRAGON:
	   			Addanimationwithsheet("dragon","images/objects-enemies.png",0,11,0,16*32,64,64,-1,-1,-1,.02);    
				Setanimation("dragon");
				SetSize(80,80,true);
				type=ENEMY_TYPE_DRAGON; 
				break;
			case ENEMY_TYPE_HAMMER:
	   			Addanimationwithsheet("hammer","images/objects-enemies.png",0,4,9*32,11*32,64,64,-1,-1,-1,.2);
				Setanimation("hammer");
				type=ENEMY_TYPE_HAMMER; 
				break;
			/**
			 * Otra forma de agregar sprites es
			 *  AddEmptyFrame (50,10);
        	 *  SetColor(RGB(0,255,0));
			 */

		}
		if(_add_dead_animation)Addanimationwithsheet("enemy-dead","images/objects-enemies.png",0,4,0,3*32,32,32,-1,-1,-1,.2);
		//Setcollisionrect(0,0,32,32);
		SetCollision(True);
	
	}	
	virtual _operator_delete(){
		if(type==ENEMY_TYPE_PENDULUM){
			delete pendulum;
		}
	}

	function enemy_set_dead(){
		Setanimation("enemy-dead");
		SetCollision(False);
	}
	function Move(){   
		if(GetCurAnimation() =="enemy-dead" && GetAnimationLoops()>0){
			//GetApp().GetEngine().LogPrint("enemigo matado");
			Destroy();
			return;
		}
		
		//Si es un p치jaro y se sale por la izquierda
		if(type==1 || type====2 || type==3 || type==4){
			if(GetX()<game.player1.getX()-350){
				SetPos(-100,-100);
				speedX=0;
			}
		}
		//Si es un buitre que te persigue  
		else if(type==ENEMY_TYPE_VULTURE){
			if(GetX()>=game.player1.GetX()){
				speedX=-2;
			}else{
				speedX=2;
			}
			if(GetY()>=game.player1.GetY()){
				speedY=-2;
			}else{
				speedY=2;
			}
		}else if(type==ENEMY_TYPE_SQUIRREL){
			//Si es un escorpi칩n o un cuervo que va de izquierda a derecha
			if (GetX()<=start_position_x-100){
				speedX=3;
				SetHFlip(True);
			}else if (GetX()>=start_position_x){
				speedX=-3;
				SetHFlip(False);
			}
		}else if(type==ENEMY_TYPE_SHOOT_PLAYER_HORIZONTAL){
			//Si el n칰mero de aimaciones repetidas es mayor que 14 animaciones creamos un fuego 
			if(GetAnimationLoops()>12){
				//GetApp().GetEngine().LogPrint("Vamos a crear un fuego");
				ResetAnimation ();
				if(GetX()>=game.player1.GetX()){
					SetHFlip(True);
				}else{
					SetHFlip(False);
				}
				// Par치metros tipo (ver main.pi) y enemy
				game.create_fire(FIRE_TYPE_MOVING_HORIZONTAL,this); 
			}
		}else if(type==ENEMY_TYPE_SHOOT_PLAYER_VERTICAL){
			if(GetAnimationLoops()>10){
				//GetApp().GetEngine().LogPrint("Vamos a crear un fuego");
				ResetAnimation ();
				//parametros tipo y enemy
				game.create_fire(FIRE_TYPE_MOVING_VERTICAL, this); 
			}
		}else if(type==ENEMY_TYPE_CRUSHING_BRICK){
			if (GetY()<=start_position_y-100){
				speedY=3;
			}else if(GetY()>=start_position_y){
				speedY=-3;
			}
		// la bomba con piernas detecta colisiones con tiles s칩lidos y  si los de abajo est치n vac칤os se mueve
		}else if(type==ENEMY_TYPE_BOMB){
			_tile_down=TILE_TYPE_EMPTY;
			
			if(speedX<0){
				_tile_left=game.get_tile_left_object(GetX(),GetY());
				//Si a la izquierda hay un tile vac칤o
				if(_tile_left>TILE_TYPE_GROUND || _tile_left==TILE_TYPE_EMPTY){
					//obtenemos el tile de abajo para comprobar si est치 vac칤o
					_tile_down=game.get_tile_down_object(GetX()-32, GetY());
				}else{
					speedX=-3;
				}
				
			}else{
				_tile_right=game.get_tile_right_object(GetX(),GetY());
				if(_tile_right>TILE_TYPE_GROUND ||_tile_right==TILE_TYPE_EMPTY){
					_tile_down=game.get_tile_down_object(GetX(), GetY());
				}else{
					speedX=3;
				}
				
			}
			
			
			if(_tile_down>TILE_TYPE_GROUND || _tile_down==TILE_TYPE_EMPTY){
				if(speedX>0){
					SetHFlip(True);
					speedX=-3;
				}else{
					SetHFlip(False);
					speedX=3;
				}
			}
		}else if(type==ENEMY_TYPE_DRAGON){
			//Como para las instancias que se salen de la c치mara
			// si se aleja mucho lo acercamos al player
			if(GetX()>game.player1.GetX()+450){
				SetPos(GetX()-100,GetY());
			}else if(GetX()<game.player1.GetX()-450){
				SetPos(GetX()+64,GetY());
			}
			//Esto hace que persiga al player y qe se quede dando vueltas encima
			if(GetX()>game.player1.GetX()+10 && GetX()>game.player1.GetX()+20){
				speedX=-2;
				SetHFlip(true);
			}else if(GetX()<game.player1.GetX()-10 && GetX()<game.player1.GetX()-20){
				SetHFlip(false);
				speedX=2;
			}
		}
		

		incpos(speedX,speedY);
	}

	function GetItemType(){
		return type;
	}

	function SetStartPosition(_x,_y){
		start_position_x=_x;
		start_position_y=_y;
	}


	function SetSquare(_x,_y,_w,_h){
		_ct=CreateController();
		_ruta=NewObject("ruta", "GL_Route");
		_ruta.AddRect(_x,_y,_w,_h);
		_ct.SetSpeed(2);
		_ct.SetRoute(_ruta, _ruta.MODE_LOOP);
		_ct.Start();
	}

	function SetCircle(_x,_y,_r){
		_ruta=NewObject("ruta", "GL_Route");
		_ruta.AddCircle(_x,_y,_r);
		_ct=CreateController();
		_ct.SetSpeed(2);
		_ct.SetRoute(_ruta, _ruta.MODE_LOOP);
		_ct.Start();
	}

	function SetRouteZigZag(_x,_y){
		_ruta=NewObject("ruta", "GL_Route");
		_ruta.AddNode (_x+10,_y-2);
		_ruta.AddNode (_x+20,_y-10);
		_ruta.AddNode (_x+50,_y-20);
		_ruta.AddNode (_x+100,_y-30);
		_ruta.AddNode (_x+50,_y-20);
		_ruta.AddNode (_x+20,_y-10);
		_ruta.AddNode (_x+10,_y-2);
		_ruta.AddNode (_x-10,_y-10);
		_ruta.AddNode (_x-20,_y-20);
		_ruta.AddNode (_x-50,_y-30);
		_ct=CreateController();
		_ct.SetSpeed(2);
		_ct.SetRoute(_ruta, _ruta.MODE_PINGPONG);
		_ct.Start();
	}


}