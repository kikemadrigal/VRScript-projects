namespace es_tipolisto_caballeroVara_enemies;

class Pendulum implements GL_Sprite{
    properties:
        game=null;
        ancla_x =0;
        ancla_y =0;
        length =0;
        angle =0;
        angular_velocity =0;
        angular_acceleration =0;
        gravity =0;
        radius =0;




    virtual _operator_new(_name,_creator, _params){
		game=_params[0];
		ancla_x=_params[1];
		ancla_y=_params[2];
        length=_params[3];
        // Posición del punto de anclaje
        angle = 3.1416 / 2;   // Ángulo inicial (45 grados)
        angular_velocity = 0;   // Velocidad angular
        angular_acceleration = 0;   // Aceleración angular
        gravity = 0.5;   // Gravedad (ajustar para el juego)
        radius = 20; 

        Addanimationwithsheet("pendulum","images/objects-enemies.png",0,0,6*32,13*32,64,64,-1,-1,-1,.02);    
		Setanimation("pendulum");
        SetCollision(True);
        Setcollisionrect(22,40,20,24);
        SetPos(ancla_x,ancla_y);
        //SetPivot(0, 1);
    }

    virtual Move(){
        // Ecuación del péndulo simple: θ'' = -(g/L) * sin(θ)
        angular_acceleration = -(gravity / length) * sin(angle); 
        // Actualizar velocidad y posición
        angular_velocity += angular_acceleration; 
        angle += angular_velocity; 
        // Actualizar posición cartesiana
        //Calcula la posición de la bola basada en el ángulo actual
        _x = ancla_x + length * sin(angle); 
        _y = ancla_y + length * cos(angle); 
        SetPos(_x,_y);
        SetAngle(-angle);
    }
}