 /**
@Title: El caballero de la bara
@autor Kike Madrigal
@Version: 1.0
*/
class main implements GL_Program {
   defines:
        DEBUG_MODE=false;
        //* Dimensiones del nivel
        LEVEL_WIDTH=3000;
        LEVEL_HEIGHT=450;
        // Dimensiones del viewport o cámara
        // Si la resolucion fullhd son 1280*720, si queremos trabajar con 800px de ancho
        // (800*720)/1280=450 px de alto, tendremos que poner el alto en 450 pixeles

        VIEWPORT_WIDTH=800;  // Esto es lo mismo que GetApp().GetResX()  
        VIEWPORT_HEIGHT=450; // Esto es lo mismo que GetApp().GetResY()  
        //otros
        //GROUND_Y=20*32;
        //450 de alto /32 = 14, pero el player ocupa 2 tiles (64x64px), por lo tanto nuestro player estara en 10
        GROUND_Y=10*32;

        // Tiles
        //Los tiles sólidos (plataforma, muro) son hasta el 250
        TILE_TYPE_GROUND=224;   // sólido, pared, suelo, plataforma, a prtir de ahí hacia abajo son todos sólidos
        TILE_TYPE_LADDER=300;   // escalera
        TILE_TYPE_WATER=325;    // agua
        TILE_TYPE_DIED=275;     // muerte
        TILE_TYPE_EMPTY=65535;  // vacio

        //Objects
        OBJECT_TYPE_META=1;
        OBJECT_TYPE_COLLECTIBLE_HEALTH=2;   //recogibles
        OBJECT_TYPE_COLLECTIBLE_KEY=3;      //recogibles
        OBJECT_TYPE_COLLECTIBLE_COIN50=10;  //recogibles
        OBJECT_TYPE_COLLECTIBLE_COIN100=11;
        OBJECT_TYPE_DESTRUCTIBLE=20;        // destructible
        OBJECT_TYPE_MOVIBLE=21;             // Movible
        OBJECT_TYPE_PLATFORM_HORIZONTAL=30; //movible horizontal
        OBJECT_TYPE_PLATFORM_VERTICAL=31;   // movible vertical
        OBJECT_TYPE_FIRE_DEATH=40;          // Fuego que te mata
        OBJECT_TYPE_LAVA=41;                // Lava que te mata
        OBJECT_TYPE_SAND=42;                // paja
        
        // Enemigos
        ENEMY_TYPE_NONE=0;
        ENEMY_TYPE_EAGLE=1;             // Äguila
        ENEMY_TYPE_RAVEN=2;             // Cuervo
        ENEMY_TYPE_EAGLE_WHITE=3;       // Äguila blanca
        ENEMY_TYPE_RAVEN_BLACK=4;       // Cuervo negro
        ENEMY_TYPE_BAT=5;               // Murciélago
        ENEMY_TYPE_HAWK=6;              // Halcón
        ENEMY_TYPE_VULTURE=7;           // Buitre
        ENEMY_TYPE_SQUIRREL=8;          // Escorpión
        ENEMY_TYPE_UP_DOWN=9;
        ENEMY_TYPE_LEFT_RIGHT=10;
        ENEMY_TYPE_FOLLOW_PLAYER=11;
        ENEMY_TYPE_SHOOT_PLAYER_HORIZONTAL=12;
        ENEMY_TYPE_SHOOT_PLAYER_VERTICAL=13;
        ENEMY_TYPE_SAW=20;
        ENEMY_TYPE_PENDULUM=21;
        ENEMY_TYPE_CRUSHING_BRICK=22;
        ENEMY_TYPE_BOMB=23;


        //Fire
        FIRE_TYPE_SMALL=1;
        FIRE_TYPE_MOVING_HORIZONTAL=2;
        FIRE_TYPE_MOVING_VERTICAL=3;



    properties:
        stageGlobal=null;

    	//menu=null;
        game=null;
        winner=null;

        camera_not_move=false;
        
    virtual start(){
        AddScriptPackage("scripts");
        Setbackcolor(RGB(0,0,0));
        Setresolution(VIEWPORT_WIDTH,VIEWPORT_HEIGHT);
        //Lo agrandamos solo en horizontal de 800 a 1280 que suele ser la resuloción habotual
        Setviewscale(-1);
        Setvsync(true);
        Setframerate(40);
        //El stageGlobal es usado para los marcadores y elementos generales
        stageGlobal=newStage("stageGlobal","StageGlobal");
        
        /*menu=NewStage("stage","menu");
        menu.Setmain();
        menu.Setactive();*/   
         
        RunStage("menu","Menu");               
        _change ("menu");
    }


    function SetCameraNotMove(value){
        camera_not_move=value;
    }
    function CenterCamera(_player1){
        _x_camera=_player1.GetX()-GetResX()/2;
        _x_camera=Clamp(_x_camera,0, LEVEL_WIDTH-GetResX());
        game.SetCameraX(_x_camera);
    }
    function changeWinnerScreen(){
        delete game;
        RunStage("winner","Winner");
        _change ("winner");
    }

    function changeMenuScreen(){
        delete game;
        RunStage("menu","Menu");
        _change ("menu");
    }

    state "menu":
    {
        if(stageGlobal.pad.IsButtonDown(PAD_BUTTON_1)){ 	
            if(winner!=null)delete winner;
		    game=RunStage("game","Game");
            _change ("game");
        }
    }
    state "game":
    {
        if(DEBUG_MODE) game.print_score();
        
        _player1=game.player1;
        _player1.incrementoX=0;
        //Si se pulsa el cursor derecho
        if (stageGlobal.pad.IsButton(PAD_BUTTON_RIGHT)){
            tile_right=game.get_tile_right(_player1.GetX(),_player1.GetY());
            if(tile_right>TILE_TYPE_GROUND || tile_right==TILE_TYPE_EMPTY  ) _player1.incrementoX=_player1.speedX;	
            _player1.SetHFlip(False);	
            if(!camera_not_move)CenterCamera(_player1);
        }else if (stageGlobal.pad.IsButton(PAD_BUTTON_LEFT)){
            tile_left=game.get_tile_left(_player1.GetX(),_player1.GetY());
            //Solo se moverá es si el tile es mayor que el último de los tíles sólidos
            if(tile_left>TILE_TYPE_GROUND || tile_left==TILE_TYPE_EMPTY  ) _player1.incrementoX=-_player1.speedX;	
            _player1.SetHFlip(True);
            if(!camera_not_move)CenterCamera(_player1);
        }

        /*if(stageGlobal.pad.IsButton(PAD_BUTTON_2) && stageGlobal.pad.IsButton(PAD_BUTTON_LEFT)){
            //GetEngine().LogPrint("pick");
            _player1.pick=true;
            _player1.SetAnimation("pick");
            
        }*/
        // Si se pulsa arriba y no estamos ya saltando
        if(stageGlobal.pad.IsButton(PAD_BUTTON_UP) && _player1.aceleracion==0){
            _player1.incrementoY=-5;
            _player1.aceleracion=0;
        }
        //Si se pulsa el botón A se podrá agarrar un paquete de paja
        
        //Fíjate que el isButtonDown solo devuelve verdadero una vez
        if(stageGlobal.pad.IsButtonDown(PAD_BUTTON_1)){
            _player1.attack=true;  
            _player1.SetAnimation("attack");
            //Fijate que el newObject del GL_Program es distinto al del GL_Stage
            //La vara se elimina sola al medio segundo
            vara=NewObject("vara","Vara",null,[_player1, game]);

            /*
                TODO: ¿Como se borran los tiles?
            */
            // Si hay un bloque destructible a la derecha, lo borramos del tileset
            /*if(game.get_tile_right(_player1.GetX(),_player1.GetY())<=TILE_TYPE_SAND && game.get_tile_right(_player1.GetX(),_player1.GetY())>TILE_TYPE_GROUND){
                //game.set_tile(_player1.GetX(),_player1.GetY(),TILE_TYPE_EMPTY);
            }*/
        }
        _x=clamp(_player1.GetX(),0, LEVEL_WIDTH-_player1.GetWF());
        _y=clamp(_player1.GetY(),1, LEVEL_HEIGHT+_player1.GetHF());
        _player1.SetPos(_x,_y);
        _player1.incpos(_player1.incrementoX,_player1.incrementoY);

        //Si el player está atacando
        if(_player1.attack){
            if(_player1.GetAnimationLoops()>=1) _player1.attack=false;  
        }else if(_player1.pick){
           //if(_player1.GetAnimationLoops()>=1) _player1.pick=false;  
        }else{  
            if(_player1.aceleracion!=0){ 
                //Si está subiendo	
                if (_player1.incrementoY<0 && _player1.GetY()>0){ 
                    _player1.Setanimation("jump");
                    //Chequeamos que no haya un tile sólido encima y que no sea la parte superior de la pantalla
                    _tile_up=game.get_tile_up(_player1.GetX(),_player1.GetY());
                    if(_tile_up<TILE_TYPE_GROUND && _tile_up!=TILE_TYPE_EMPTY || _player1.GetY()<=0){
                        _player1.incrementoY=0;
                        _player1.aceleracion=0;
                    }
                }
                //Si está bajando
                else _player1.Setanimation("fall"); 
            }else if(_player1.incrementoX) _player1.Setanimation("walk");   
            else _player1.SetAnimation("idle");
        }

        //Rollo gravedad hasta el suelo		
        if(_player1.GetY()>=GROUND_Y){
            _player1.SetY(GROUND_Y);
            _player1.incrementoY=0;
            _player1.aceleracion=0;
        }else{
            //Rollo aceleración
            _player1.incrementoY+=_player1.aceleracion*GetFTime();
            _player1.aceleracion+=GetFTime()*0.025f;
        }
    }
    state "winner":
    {
        if(stageGlobal.pad.IsButtonDown(PAD_BUTTON_1)){
            RunStage("menu","Menu");
            _change ("menu");
        }
    }


}
  