 /**
@Title: El caballero de la bara
@autor Kike Madrigal
@Version: 1.0
*/
class main implements GL_Program {
    defines:
        //* Dimensiones del nivel
        LEVEL_WIDTH=3000;
        LEVEL_HEIGHT=450;
        // Dimensiones del viewport o cámara
        //resolucion fullhd son 1280*720, si lo queremos trabajar copn 800px de ancho
        //(800*720)/1280=450 px de alto

        VIEWPORT_WIDTH=800;
        VIEWPORT_HEIGHT=450;
        //otros
        //GROUND_Y=20*32;
        //450 de alto /32= 14
        GROUND_Y=10*32;

        // Tiles
        //Los tiles de plataforma son hasta el 100
        TILE_TYPE_GROUND=100;
        TILE_TYPE_LADDER=102; //escalera
        TILE_TYPE_WALL=103; //muro
        TILE_TYPE_WATER=104; //agua
        TILE_TYPE_DIED=105; // muerte
        TILE_TYPE_EMPTY=65535;

        //Objects
        OBJECT_TYPE_META=1;
        OBJECT_TYPE_COLLECTIBLE_HEALTH=2; //recogibles
        OBJECT_TYPE_COLLECTIBLE_KEY=3; //recogibles
        OBJECT_TYPE_COLLECTIBLE_COIN50=10; //recogibles
        OBJECT_TYPE_COLLECTIBLE_COIN100=11;
        OBJECT_TYPE_DESTRUCTIBLE=20; // destructible
        OBJECT_TYPE_MOVIBLE=21; // Movible
        OBJECT_TYPE_PLATFORM_HORIZONTAL=30; //movible horizontal
        OBJECT_TYPE_PLATFORM_VERTICAL=31; // movible vertical
        OBJECT_TYPE_FIRE_DEATH=40;
        
        // Enemigos
        ENEMY_TYPE_NONE=0;
        ENEMY_TYPE_EAGLE=1; //Äguila
        ENEMY_TYPE_RAVEN=2; // Cuervo
        ENEMY_TYPE_BAT=3; // Murciélago
        ENEMY_TYPE_HAWK=4; // Halcón
        ENEMY_TYPE_VULTURE=5; // Buitre
        ENEMY_TYPE_SQUIRREL=6; // Escorpión
        ENEMY_TYPE_UP_DOWN=7;
        ENEMY_TYPE_LEFT_RIGHT=8;
        ENEMY_TYPE_FOLLOW_PLAYER=9;
        ENEMY_TYPE_SHOOT_PLAYER_HORIZONTAL=10;
        ENEMY_TYPE_SHOOT_PLAYER_VERTICAL=11;

        //Fire
        FIRE_TYPE_SMALL=1;
        FIRE_TYPE_MOVING_HORIZONTAL=2;
        FIRE_TYPE_MOVING_VERTICAL=3;



    properties:
        stageGlobal=null;

    	menu=null;
        game=null;
        winner=null;
	
        game_over=True;
        boss_mode=false;
        
    virtual start(){
        AddScriptPackage("scripts");
        Setbackcolor(RGB(0,0,0));
        Setresolution(VIEWPORT_WIDTH,VIEWPORT_HEIGHT);
        //Lo agrandamos solo en horizontal de 800 a 1280 que suele ser la resuloción habotual
        Setviewscale(-1);
        Setframerate(30);
        //El stageGlobal es usado para los marcadores y elementos generales
        stageGlobal=newStage("stageGlobal","StageGlobal");
        //stageGlobal.text_boss_live.SetVisible(false);
        /*
        menu=NewStage("stage","menu");
        menu.Setmain();
        menu.Setactive();   
        */   
        RunStage("menu","Menu");               
        _change ("menu");
    }

    state "menu":
    {
        if(stageGlobal.pad.IsButtonDown(PAD_BUTTON_1)){
            game=RunStage("game","Game");
            _change ("game");
        }
    }
    state "game":
    {
        _player1=game.player1;
        //En las pantallas de los jefes la pantalla no se mueve
        if(!boss_mode){
            _x_camera=_player1.GetX()-GetResX()/2;
            _x_camera=Clamp(_x_camera,0, LEVEL_WIDTH-GetResX());
        }

        _player1.incrementoX=0;
        //Si se pulsa el cursor derecho
        if (stageGlobal.pad.IsButton(PAD_BUTTON_RIGHT)){
            tile_right=game.get_tile_right(_player1.GetX(),_player1.GetY());
            if(tile_right>TILE_TYPE_GROUND || tile_right==TILE_TYPE_EMPTY )
                _player1.incrementoX=_player1.speedX;	
            _player1.SetHFlip(False);	
            game.SetCameraX(_x_camera);
        }
        else if (stageGlobal.pad.IsButton(PAD_BUTTON_LEFT)){
            tile_left=game.get_tile_left(_player1.GetX(),_player1.GetY());
            if(tile_left>TILE_TYPE_GROUND || tile_left==TILE_TYPE_EMPTY)
                _player1.incrementoX=-_player1.speedX;	
            _player1.SetHFlip(True);
            game.SetCameraX(_x_camera);
        }
        // Si se pulsa arriba y no estamos ya saltando
        if(stageGlobal.pad.IsButton(PAD_BUTTON_UP) && _player1.aceleracion==0){
            _player1.incrementoY=-5;
            _player1.aceleracion=0;
        }	
        //Fíjate que el isButtonDown solo devuelve verdadero una vez
        if(stageGlobal.pad.IsButtonDown(PAD_BUTTON_1)){
            _player1.attack=true;  
            _player1.SetAnimation("attack");
            //Fijate que el newObject del GL_Program es distinto al del GL_Stage
            vara=NewObject("vara","Vara",null,[_player1, game]);
        }
            
        _x=clamp(_player1.GetX(),0, LEVEL_WIDTH-_player1.GetWF());
        //_y=clamp(_player1.GetY(),0, LEVEL_HEIGHT+player1.GetHF());
        //_player1.SetPos(_x,_y);
        _player1.SetX(_x);
        _player1.incpos(_player1.incrementoX,_player1.incrementoY);

        //Si el player está atacando
        if(_player1.attack){
            if(_player1.GetAnimationLoops()>=1) _player1.attack=false;  
        }else{  
            if(_player1.aceleracion!=0){
                //Si está subiendo	
                if (_player1.incrementoY<0) _player1.Setanimation("jump");
                    //Si está bajando
                else _player1.Setanimation("fall"); 
            }else if(_player1.incrementoX) _player1.Setanimation("walk");   
            else _player1.SetAnimation("idle");
        }

        //Rollo gravedad hasta el suelo		
        if(_player1.GetY()>=GROUND_Y){
            _player1.SetY(GROUND_Y);
            _player1.incrementoY=0;
            _player1.aceleracion=0;
        }else{
            //Rollo aceleración
            _player1.incrementoY+=_player1.aceleracion*GetFTime();
            _player1.aceleracion+=GetFTime()*0.025f;
        } 
    }
    state "winner":
    {
        if(stageGlobal.pad.IsButtonDown(PAD_BUTTON_1)){
            game=RunStage("menu","Menu");
            _change ("menu");
        }
    }
}
  