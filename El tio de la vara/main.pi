/**
@Title: El caballero de la bara
@autor Kike Madrigal
@Version: 1.0
*/
class main implements GL_Program {
    defines:
        //* Dimensiones del nivel
        LEVEL_WIDTH=3000;
        LEVEL_HEIGHT=768;
        // Dimensiones del viewport o cámara
        VIEWPORT_WIDTH=800;
        VIEWPORT_HEIGHT=768;
        //otros
        GROUND_Y=20*32;
        // Bloques
        BLOCK_TYPE_META=0;
        BLOCK_TYPE_EMPTY=1;
        BLOCK_TYPE_LADDER=2; //escalera
        BLOCK_TYPE_WALL=3; //muro
        BLOCK_TYPE_WATER=4; //agua
        BLOCK_TYPE_DIED=5; // muerte
        BLOCK_TYPE_COLLECTIBLE_COIN50=6.50; //recogibles
        BLOCK_TYPE_COLLECTIBLE_COIN100=6.100;
        BLOCK_TYPE_COLLECTIBLE_KEY=7; //recogibles
        BLOCK_TYPE_COLLECTIBLE_HEALTH=8; //recogibles
        BLOCK_TYPE_DESTRUCTIBLE=9; // destructible
        BLOCK_TYPE_GROUND=10; // plataorma
        BLOCK_TYPE_GROUND2=10.2; // plataorma 2
        BLOCK_TYPE_PLATFORM_HORIZONTAL=11; //movible horizontal
        BLOCK_TYPE_PLATFORM_VERTICAL=12; // movible vertical

        // Enemigos
        ENEMY_TYPE_NONE=0;
        ENEMY_TYPE_EAGLE=1;
        ENEMY_TYPE_RAVEN=2;
        ENEMY_TYPE_QUAIL=3;
        ENEMY_TYPE_HAWK=4;
        ENEMY_TYPE_BAT=5;
        ENEMY_TYPE_SQUIRREL=6;
        ENEMY_TYPE_UP_DOWN=7;
        ENEMY_TYPE_LEFT_RIGHT=8;
        ENEMY_TYPE_FOLLOW_PLAYER=9;
        ENEMY_TYPE_SHOOT_PLAYER_HORIZONTAL=10;
        ENEMY_TYPE_SHOOT_PLAYER_VERTICAL=10;


        //Fire
        FIRE_TYPE_SMALL=1;
        FIRE_TYPE_MOVING=2;



    properties:
        stageGlobal=null;

    	menu=null;
        game=null;
        winner=null;
	
        game_over=True;
        
    virtual start(){
        AddScriptPackage("scripts");
        Setbackcolor(RGB(0,0,0));
        Setresolution(VIEWPORT_WIDTH,VIEWPORT_HEIGHT);
        Setviewscale(-3);
        Setframerate(30);
        //El stageGlobal es usado para los marcadores y elementos generales
        stageGlobal=newStage("stageGlobal","StageGlobal");
        /*
        menu=NewStage("stage","menu");
        menu.Setmain();
        menu.Setactive();   
        */   
        RunStage("menu","menu");               
        _change ("menu");
    }

    state "menu":
    {
        if(stageGlobal.pad.IsButtonDown(PAD_BUTTON_1)){
            game=RunStage("game","Game");
            _change ("game");
        }
    }
    state "game":
    {
        _player1=game.player1;
        _x_camera=_player1.GetX()-GetResX()/2;
        _x_camera=Clamp(_x_camera,0, LEVEL_WIDTH-GetResX());
        //Si se pulsa el cursor derecho
        if (stageGlobal.pad.IsButton(PAD_BUTTON_RIGHT)){
            _player1.incrementoX=_player1.speedX;	
            _player1.SetHFlip(False);	
            game.SetCameraX(_x_camera);
        }
        else if (stageGlobal.pad.IsButton(PAD_BUTTON_LEFT)){
            _player1.incrementoX=-_player1.speedX;	
            _player1.SetHFlip(True);
            game.SetCameraX(_x_camera);
        }else{
            _player1.incrementoX=0;
        }
        
        // Si se pulsa arriba y no estamos ya saltando
        if(stageGlobal.pad.IsButton(PAD_BUTTON_UP) && _player1.aceleracion==0){
            _player1.incrementoY=-5;
            _player1.aceleracion=0;
        }	
        //Fíjate que el isButtonDown solo devuelve verdadero una vez
        if(stageGlobal.pad.IsButtonDown(PAD_BUTTON_1)){
            _player1.attack=true;  
            _player1.SetAnimation("attack");
            //Fijate que el newObject del GL_Program es distinto al del GL_Stage
            vara=NewObject("vara","Vara",null,[_player1, game]);
        }
            
        _x=clamp(_player1.GetX(),0, LEVEL_WIDTH-_player1.GetWF());
        _player1.setX(_x);
        _player1.incpos(_player1.incrementoX,_player1.incrementoY);

        //Si el player está atacando
        if(_player1.attack){
            if(_player1.GetAnimationLoops()>=1) _player1.attack=false;  
        }else{  
            if(_player1.aceleracion!=0){
            //Si está subiendo	
            if (_player1.incrementoY<0) _player1.Setanimation("jump");
                //Si está bajando
                else _player1.Setanimation("fall"); 
            }else if(_player1.incrementoX) _player1.Setanimation("walk");   
            else _player1.SetAnimation("idle");
        }

        //Rollo gravedad plataforma			
        if(_player1.GetY()>=GROUND_Y){
            _player1.SetY(GROUND_Y);
            _player1.incrementoY=0;
            _player1.aceleracion=0;
        }else{
            _player1.incrementoY+=_player1.aceleracion*GetFTime();
            _player1.aceleracion+=GetFTime()*0.025f;
        } 
    }
    state "winner":
    {
        if(stageGlobal.pad.IsButtonDown(PAD_BUTTON_1)){
            game=RunStage("menu","menu");
            _change ("menu");
        }
    }


    
}
 